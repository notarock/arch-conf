
test -s ~/.alias && . ~/.alias || true

[[ $- != *i* ]] && return

alias ls='ls --color=auto'

# get current branch in git repo

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

export PS1="\[\e[36m\][\[\e[m\]\[\e[32m\]\u\[\e[m\]\[\e[36m\]@\[\e[m\]\[\e[32m\]\h\[\e[m\] \[\e[33m\]\w\[\e[m\]\[\e[36m\]]\[\e[m\]\[\e[31m\]\[\e[m\]\\[\e[31m\]\$( parse_git_branch )\e[m\]\e[34m\]\\$\[\e[m\] "

###########
# Aliases #
###########

alias vi=vim
alias cdsrc='cd ~/src/'
alias lt='ls -lrt'

alias pls='sudo !!'

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias plantuml='java -jar ~/.emacs.d/utilities/plantuml.jar $1'

unset GIT_ASKPASS
unset SSH_ASKPASS

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

#####################
# Fonctions customs #
#####################

# Deplacement rapide
function workon {
   case "$1" in

        test)
            cd ~/src/
            ;;

        *)
            echo $"Pas trouver de shortcut associ√©. Essaie 'test' "
    esac

}

# Indente JSON
function json {

    indent=''
    tab='\t'
    output=''

    json=$@

    for (( i=0; i<${#json}; i++ )); do
        char="${json:$i:1}"
        case $char in
            "[")
                indent=$indent$tab
                output="$output$char\n$indent"
                ;;
            "]")
                indent=${indent::-2}
                output="$output\n$indent$char"
                ;;

            "{")
                indent=$indent$tab
                output="$output$char\n$indent"
                ;;
            "}")
                indent=${indent::-2}
                output="$output\n$indent$char"
                ;;
            ",")
                output="$output$char\n$indent"
                ;;
            " ")
                ;;
            *)
                output="$output$char"
        esac
    done

    echo -e $output' '

}

export js